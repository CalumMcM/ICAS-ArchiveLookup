@{
	ViewBag.Title = "Finance";
}

<div class="jumbotron">

	<h1>
		Finance Lookup
	</h1>
	<p>Select the criteria for your search: </p>

	<button id="idInputButton" onclick="showInput('idInput')" class="addBtn">ID</button>
	<button id="mkInputButton" onclick="showInput('mkInput')" class="addBtn">Major Key</button>
	<button id="studnoInputButton" onclick="showInput('studnoInput')" class="addBtn">Student No.</button>
	<button id="forenameInputButton" onclick="showInput('forenameInput')" class="addBtn">First Name</button>
	<button id="middlenameInputButton" onclick="showInput('middlenameInput')" class="addBtn">Middle Name</button>
	<button id="surnameInputButton" onclick="showInput('surnameInput')" class="addBtn">Last Name</button>
	<button id="firmidInputButton" onclick="showInput('firmidInput')" class="addBtn">Firm ID</button>
	<button id="firmnoInputButton" onclick="showInput('firmnoInput')" class="addBtn">Firm No.</button>
	<button id="firmnameInputButton" onclick="showInput('firmnameInput')" class="addBtn">Firm Name</button>
	<button id="companynameInputButton" onclick="showInput('companynameInput')" class="addBtn">Company Name</button>
	<button id="refInputButton" onclick="showInput('refInput')" class="addBtn">Invoice Reference No.</button>


	<p id="idInputText" class="lead">
		ID:
		<input type="text" id="idInput" class="input-lookup" name="id">
	</p>

	<p id="mkInputText" class="lead">
		Major Key:
		<input type="text" id="mkInput" class="input-lookup" name="mk">
	</p>

	<p id="studnoInputText" class="lead">
		Student No:
		<input type="text" id="studnoInput" class="input-lookup" name="studno">
	</p>

	<p id="forenameInputText" class="lead">
		First Name:
		<input type="text" id="forenameInput" class="input-lookup" name="forename">
	</p>

	<p id="middlenameInputText" class="lead">
		Middle Name:
		<input type="text" id="middlenameInput" class="input-lookup" name="middlename">
	</p>

	<p id="surnameInputText" class="lead">
		Last Name:
		<input id="surnameInput" type="text" class="input-lookup" name="surname">
	</p>

	<p id="firmidInputText" class="lead">
		Firm ID:
		<input type="text" id="firmidInput" class="input-lookup" name="firmid">
	</p>

	<p id="firmnoInputText" class="lead">
		Firm No:
		<input type="text" id="firmnoInput" class="input-lookup" name="firmno">
	</p>

	<p id="firmnameInputText" class="lead">
		Firm Name:
		<input type="text" id="firmnameInput" class="input-lookup" name="firmname">
	</p>

	<p id="companynameInputText" class="lead">
		Company Name:
		<input type="text" id="companynameInput" class="input-lookup" name="companyname">
	</p>

	<p id="refInputText" class="lead">
		Invoice Reference No:
		<input type="text" id="refInput" class="input-lookup" name="ref">
	</p>

	<div class="copySelectDropdown">
		<p><button id="submitButton" onClick="processQuery()" class="btn btn-primary btn-lg">Submit</button></p>
		<div id="loadingIcon" class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
	</div>

	<div id="tabBar" class="tab">
		<button class="tablinks" onclick="changeTab(event, 'Customers')">Customers</button>
		<button class="tablinks" onclick="changeTab(event, 'Invoices')">Invoices</button>
		<button class="tablinks" onclick="changeTab(event, 'Transactions')">Transactions</button>
		<button class="tablinks" onclick="changeTab(event, 'Activity')">Activity</button>
		<button class="tablinks" onclick="changeTab(event, 'CustomerNotes')">Customer Notes</button>
	</div>

	<div id="Customers" class="tabcontent">
		<div class="copySelectDropdown">
			<button id="CustomerscopyButton" onclick="copy('Customers')" class="copyBtn">&#x1F4CB</button>
			<button id="CustomerscopySelectButton" onclick="showCopyDropdown('Customers')" class="copyBtn">+</button>
			<div id="CustomersDropdown" class="copySelectDropdown-content">
				<button id="mkCCopyButton" onclick="copySelectButton('mkCCopy', 'Customers')" class="addBtn">Major Key</button>
				<button id="surnameCCopyButton" onclick="copySelectButton('surnameCCopy', 'Customers')" class="addBtn">Last Name</button>
				<button id="forenameCCopyButton" onclick="copySelectButton('forenameCCopy', 'Customers')" class="addBtn">First Name</button>
				<button id="middlenameCCopyButton" onclick="copySelectButton('middlenameCCopy', 'Customers')" class="addBtn">Middle Name</button>
				<button id="studnoCCopyButton" onclick="copySelectButton('studnoCCopy', 'Customers')" class="addBtn">Student No</button>
				<button id="mtCCopyButton" onclick="copySelectButton('mtCCopy', 'Customers')" class="addBtn">Member Type</button>
				<button id="catCCopyButton" onclick="copySelectButton('catCCopy', 'Customers')" class="addBtn">Category</button>
				<button id="titleCCopyButton" onclick="copySelectButton('titleCCopy', 'Customers')" class="addBtn">Title</button>
				<button id="cityCCopyButton" onclick="copySelectButton('cityCCopy', 'Customers')" class="addBtn">City</button>
				<button id="countyCCopyButton" onclick="copySelectButton('countyCCopy', 'Customers')" class="addBtn">County</button>
				<button id="compsortCCopyButton" onclick="copySelectButton('compsortCCopy', 'Customers')" class="addBtn">Company Sort</button>
				<button id="addrCCopyButton" onclick="copySelectButton('addrCCopy', 'Customers')" class="addBtn">Full Address</button>
				<button id="firmnoCCopyButton" onclick="copySelectButton('firmnoCCopy', 'Customers')" class="addBtn">Main Firm No</button>
			</div>
		</div>
		<div id="CustomersContainer" class="minotron">
			<table id="CustomersResultsTable" class="resultsTable">
				<tr></tr>
			</table>
		</div>
	</div>

	<div id="Invoices" class="tabcontent">
		<div class="copySelectDropdown">
			<button id="InvoicescopyButton" onclick="copy('Invoices')" class="copyBtn">&#x1F4CB</button>
			<button id="InvoicescopySelectButton" onclick="showCopyDropdown('Invoices')" class="copyBtn">+</button>
			<div id="InvoicesDropdown" class="copySelectDropdown-content">
				<button id="mkICopyButton" onclick="copySelectButton('mkICopy', 'Invoices')" class="addBtn">Major Key</button>
				<button id="invdateICopyButton" onclick="copySelectButton('invdateICopy', 'Invoices')" class="addBtn">Invoice Date</button>
				<button id="refnumICopyButton" onclick="copySelectButton('refnumICopy', 'Invoices')" class="addBtn">Reference Num</button>
				<button id="invdescICopyButton" onclick="copySelectButton('invdescICopy', 'Invoices')" class="addBtn">Invoice Description</button>
				<button id="chargesICopyButton" onclick="copySelectButton('chargesICopy', 'Invoices')" class="addBtn">Charges</button>
				<button id="credICopyButton" onclick="copySelectButton('credICopy', 'Invoices')" class="addBtn">Credits</button>
				<button id="balICopyButton" onclick="copySelectButton('balICopy', 'Invoices')" class="addBtn">Balance</button>
				<button id="noteICopyButton" onclick="copySelectButton('noteICopy', 'Invoices')" class="addBtn">Note</button>
			</div>
		</div>
		<div id="InvoicesContainer" class="minotron">
			<table id="InvoicesResultsTable" class="resultsTable">
				<tr></tr>
			</table>
		</div>
	</div>

	<div id="Transactions" class="tabcontent">
		<div class="copySelectDropdown">
			<button id="TransactionscopyButton" onclick="copy('Transactions')" class="copyBtn">&#x1F4CB</button>
			<button id="TransactionscopySelectButton" onclick="showCopyDropdown('Transactions')" class="copyBtn">+</button>
			<div id="TransactionsDropdown" class="copySelectDropdown-content">
				<button id="mkTCopyButton" onclick="copySelectButton('mkTCopy', 'Transactions')" class="addBtn">Major Key</button>
				<button id="transdateTCopyButton" onclick="copySelectButton('transdateTCopy', 'Transactions')" class="addBtn">Transaction Date</button>
				<button id="refnumTCopyButton" onclick="copySelectButton('refnumTCopy', 'Transactions')" class="addBtn">Reference Num</button>
				<button id="transtypeTCopyButton" onclick="copySelectButton('transtypeTCopy', 'Transactions')" class="addBtn">Transaction Type</button>
				<button id="transdescTCopyButton" onclick="copySelectButton('transdescTCopy', 'Transactions')" class="addBtn">Transaction Description</button>
				<button id="amountTCopyButton" onclick="copySelectButton('amountTCopy', 'Transactions')" class="addBtn">Transaction Amount</button>
			</div>
		</div>
		<div id="TransactionsContainer" class="minotron">
			<table id="TransactionsResultsTable" class="resultsTable">
				<tr></tr>
			</table>
		</div>
	</div>
	<div id="Activity" class="tabcontent">
		<div class="copySelectDropdown">
			<button id="ActivitycopyButton" onclick="copy('Activity')" class="copyBtn">&#x1F4CB</button>
			<button id="ActivitycopySelectButton" onclick="showCopyDropdown('Activity')" class="copyBtn">+</button>
			<div id="ActivityDropdown" class="copySelectDropdown-content">
				<button id="mkACopyButton" onclick="copySelectButton('mkACopy', 'Activity')" class="addBtn">Major Key</button>
				<button id="transACopyButton" onclick="copySelectButton('transACopy', 'Activity')" class="addBtn">Transaction Date</button>
				<button id="typeACopyButton" onclick="copySelectButton('typeACopy', 'Activity')" class="addBtn">Activity Type</button>
				<button id="descACopyButton" onclick="copySelectButton('descACopy', 'Activity')" class="addBtn">Description</button>
				<button id="prodcodeACopyButton" onclick="copySelectButton('prodcodeACopy', 'Activity')" class="addBtn">Product Code</button>
				<button id="unitsACopyButton" onclick="copySelectButton('unitsACopy', 'Activity')" class="addBtn">Units</button>
				<button id="thrudateACopyButton" onclick="copySelectButton('thrudateACopy', 'Activity')" class="addBtn">Thru Date</button>
				<button id="amountACopyButton" onclick="copySelectButton('amountACopy', 'Activity')" class="addBtn">Amount</button>
			</div>
		</div>
		<div id="ActivityContainer" class="minotron">
			<table id="ActivityResultsTable" class="resultsTable">
				<tr></tr>
			</table>
		</div>
	</div>

	<div id="CustomerNotes" class="tabcontent">
		<div class="copySelectDropdown">
			<button id="CustomerNotescopyButton" onclick="copy('CustomerNotes')" class="copyBtn">&#x1F4CB</button>
			<button id="CustomerNotescopySelectButton" onclick="showCopyDropdown('CustomerNotes')" class="copyBtn">+</button>
			<div id="CustomerNotesDropdown" class="copySelectDropdown-content">
				<button id="mkCNCopyButton" onclick="copySelectButton('mkCNCopy', 'CustomerNotes')" class="addBtn">Major Key</button>
				<button id="lastfirstCNCopyButton" onclick="copySelectButton('lastfirstCNCopy', 'CustomerNotes')" class="addBtn">Last First</button>
				<button id="middlenameCNCopyButton" onclick="copySelectButton('middlenameCNCopy', 'CustomerNotes')" class="addBtn">Middle Name</button>
				<button id="commentsCNCopyButton" onclick="copySelectButton('commentsCNCopy', 'CustomerNotes')" class="addBtn">Comments</button>
			</div>
		</div>
		<div id="CustomerNotesContainer" class="minotron">
			<table id="CustomerNotesResultsTable" class="resultsTable">
				<tr></tr>
			</table>
		</div>
	</div>

	<p id="clipboard" class="clipboard"></p>
	<p id="financeQueryResults" class="queryResults"></p>
	<p id="customerQueryResults" class="queryResults"></p>
	<p id="queriesLoaded" class="queryResults"></p>
</div>
<script src="~/Scripts/moment.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/lodashCore.js" type="text/javascript"></script>
<script>
	const getBtnNames = () =>["id", "mk", "studno", "forename", "middlename", "surname", "firmid", "firmno", "firmname", "companyname", "ref"];
	const getClassNames = () =>["ID", "MAJOR_KEY", "STUDENT_NO", "FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "FIRM_ID", "MAIN_FIRM_NO", "FIRM_NAME", "Company", "REFERENCE_NUM"];
	function changeTab(evt, tabName) {
		var i, tabcontent, tablinks;

		tabcontent = document.getElementsByClassName("tabcontent");
		for (i = 0; i < tabcontent.length; i++) {
			tabcontent[i].style.display = "none";
		}

		tablinks = document.getElementsByClassName("tablinks");
		for (i = 0; i < tablinks.length; i++) {
			tablinks[i].className = tablinks[i].className.replace(" active", "");
		}

		document.getElementById(tabName).style.display = "block";
		evt.currentTarget.tabName += " active";
	}
	function getCopyBtnNames(table) {
		switch (table) {
			case "Customers": return ["mkC", "surnameC", "forenameC", "middlenameC","studnoC", "mtC", "catC", "titleC", "cityC", "countyC", "compsortC", "addrC", "firmnoC"];
			case "Invoices": return ["mkI", "invdateI", "refnumI", "invdescI", "chargesI", "credI", "balI", "noteI"];
			case "Transactions": return ["mkT", "transdateT", "refnumT", "transtypeT", "transdescT", "amountT"]
			case "Activity": return ["mkA", "transA", "typeA", "descA", "prodcodeA", "unitsA", "thrudateA", "amountA"];
			case "CustomerNotes": return ["mkCN", "lastfirstCN", "middlenameCN", "commentsCN"];
				defualt: return [];
		}
	}
	function getCopyFields(table) {
		switch (table) {
			case "Customers": return ["MAJOR_KEY", "LAST_NAME", "FIRST_NAME", "MIDDLE_NAME", "STUDENT_NO", "MEMBER_TYPE", "CATEGORY", "TITLE", "CITY", "COUNTY", "COMPANY_SORT", "FULL_ADDRESS", "MAIN_FIRM_NO"];
			case "Invoices": return ["MAJOR_KEY", "INVOICE_DATE", "REFERENCE_NUM", "INVOICE_DESCRIPTION", "CHARGES", "CREDITS", "BALANCE", "NOTE"];
			case "Transactions": return ["MAJOR_KEY", "TRANS_TRANSACTION_DATE", "REFERENCE_NUM", "TRANSACTION_TYPE", "TRANSACTION_DESCRIPTION", "TRANSACTION_AMOUNT"]
			case "Activity": return ["MAJOR_KEY", "TRANSACTION_DATE", "ACTIVITY_TYPE", "DESCRIPTION", "PRODUCT_CODE", "UNITS", "THRU_DATE", "AMOUNT"]
			case "CustomerNotes": return ["MAJOR_KEY", "LAST_FIRST", "MIDDLE_NAME", "COMMENTS"];
				defualt: return [];
		}
	}
	function showInput(input) {
		let inputText = document.getElementById(input);
		let inputTextTitle = document.getElementById(input + "Text");
		let button = document.getElementById(input + "Button");
		if (inputText.style.display == "none" || button.style.backgroundColor == "") {
			inputText.value = "";
			inputText.style.display = "block";
			inputTextTitle.style.display = "block";
			button.style.backgroundColor = "#20A64B"
			button.style.borderColor = "#20A64B";
		} else {
			inputText.style.display = "none";
			inputTextTitle.style.display = "none";
			button.style.backgroundColor = "#f1f3f1";
			button.style.borderColor = "#F9B123";
		}
		showSubmit();
	}
	function showSubmit() {
		let btnNames = getBtnNames();
		let active = 0;
		for (let button in btnNames) {
			if (document.getElementById(btnNames[button] + "InputButton").style.backgroundColor === "rgb(32, 166, 75)") {
				++active;
				document.getElementById("submitButton").style.display = "block";
			}
		}
		if (active == 0) {
			document.getElementById("submitButton").style.display = "none";
		}
	}
	function copy(table) {
		let btnNames = getCopyBtnNames(table);
		let classNames = getCopyFields(table);
		let chosenFields = [];
		for (let button in btnNames) {
			if (document.getElementById(btnNames[button] + "CopyButton").style.backgroundColor == "rgb(32, 166, 75)") {
				chosenFields.push(classNames[button]);
			}
		}
		if (chosenFields.length == 0) {
			chosenFields = classNames;
		}
		constructClipboard(chosenFields, table);
		let clipboardContents = document.getElementById("clipboard").innerHTML;
		let itemsToCopy = document.createElement("textarea");
		document.body.appendChild(itemsToCopy);
		itemsToCopy.value = clipboardContents;
		itemsToCopy.select();
		document.execCommand("copy");
		console.log("copied!");
		document.body.removeChild(itemsToCopy);
		document.getElementById(table + "copyButton").innerHTML = '&#10004';
	}
	function copySelectButton(buttonID, table) {
		currentColour = document.getElementById(buttonID + "Button").style.backgroundColor;
		document.getElementById(table + "copyButton").innerHTML = '&#x1F4CB';
		if (currentColour == "rgb(192, 10, 39)" || currentColour == "") {
			document.getElementById(buttonID + "Button").style.backgroundColor = "#20A64B";
		}
		else {
			document.getElementById(buttonID + "Button").style.backgroundColor = "#ffffff";
		}
	}
	function showCopyDropdown(table) {
		document.getElementById(table + "Dropdown").classList.toggle("show");
	}
	function processQuery() {
		document.getElementById("loadingIcon").style.display = "block";
		document.getElementById("queriesLoaded").innerHTML = 0;
		let btnNames = getBtnNames();
		let classNames = getClassNames();
		let inputs = {}
		let dateTypesObjects = $('input[type=date]').map(function () { return this.id; }).get();
		for (let button in btnNames) {
			if (document.getElementById(btnNames[button] + "InputButton").style.backgroundColor == "rgb(32, 166, 75)") {
				if (dateTypesObjects.includes(btnNames[button] + "input")) {
					inputs[classNames[button]] = moment(document.getElementById(btnNames[button] + "Input").value).format('YYYY-MM-DDT00:00:00');
				}
				else {
					if (btnNames[button] + "Input")
						inputs[classNames[button]] = document.getElementById(btnNames[button] + "Input").value;
				}
			}
		}
		let financeQuery = new XMLHttpRequest();
		financeQuery.open("POST", 'api/finance', true);
		financeQuery.onreadystatechange = function () {
			if (this.readyState == 4 && this.status == 200) {
				var financeQueryResults = this.response
				financeQueryResults = $.parseJSON(financeQueryResults);
				document.getElementById("queriesLoaded").innerHTML = document.getElementById("queriesLoaded").innerHTML + 1
				displayResultsFinance(financeQueryResults);
				document.getElementById("financeQueryResults").innerHTML = JSON.stringify(financeQueryResults);
			}
		};
		financeQuery.setRequestHeader('Content-Type', 'application/json');
		financeQuery.send(JSON.stringify(inputs));
		
		let customerQuery = new XMLHttpRequest();
		customerQuery.open("POST", 'api/person', true);
		customerQuery.onreadystatechange = function () {
			if (this.readyState == 4 && this.status == 200) {
				var customerQueryResults = this.response
				customerQueryResults = $.parseJSON(customerQueryResults);
				document.getElementById("queriesLoaded").innerHTML = document.getElementById("queriesLoaded").innerHTML + 1
				displayResultsCustomer(customerQueryResults);
				document.getElementById("customerQueryResults").innerHTML = JSON.stringify(customerQueryResults);
			}
		};
		customerQuery.setRequestHeader('Content-Type', 'application/json');
		customerQuery.send(JSON.stringify(inputs));
	}
	function displayResultsFinance(inputs) {
		document.getElementById("tabBar").style.display = "block";
		if (document.getElementById("queriesLoaded").innerHTML > 1) {
			document.getElementById("loadingIcon").style.display = "none";
		}
		//Delete previous table if it exists:
		tableDemolisherAndDisplayer("Invoices");
		tableDemolisherAndDisplayer("Transactions");
		
		tableBuilder(inputs, "InvoicesResultsTable", ["MAJOR_KEY", "INVOICE_DATE", "REFERENCE_NUM", "INVOICE_DESCRIPTION", "CHARGES", "CREDITS", "BALANCE", "NOTE"])
		tableBuilder(inputs, "TransactionsResultsTable", ["TRANS_TRANSACTION_DATE","REFERENCE_NUM","MAJOR_KEY","TRANSACTION_NUMBER","TRANSACTION_TYPE","TRANSACTION_AMOUNT", "TRANSACTION_DESCRIPTION"])
	}
	function displayResultsCustomer(inputs) {
		document.getElementById("tabBar").style.display = "block";
		tableDemolisherAndDisplayer("Activity");
		tableDemolisherAndDisplayer("Customers");
		tableDemolisherAndDisplayer("CustomerNotes");
		let customerResultsTable = ["MAJOR_KEY", "MEMBER_TYPE", "STUDENT_NO", "CATEGORY", "FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "TITLE", "MAIN_FIRM_NO", "CITY", "COUNTY", "COMPANY_SORT", "FULL_ADDRESS"];
		tableBuilder(inputs, "ActivityResultsTable", ["MAJOR_KEY", "TRANSACTION_DATE", "ACTIVITY_TYPE", "PRODUCT_CODE", "DESCRIPTION", "THRU_DATE", "AMOUNT", "UNITS"]);
		tableBuilder(inputs, "CustomersResultsTable", customerResultsTable)
		tableBuilder(inputs, "CustomerNotesResultsTable", ["MAJOR_KEY", "LAST_FIRST", "MIDDLE_NAME", "COMMENTS"])
	}
	function tableDemolisherAndDisplayer(tableName) {
		//Demolisher
		for (var i = document.getElementById(tableName + "ResultsTable").rows.length; i > 0; i--) {
			document.getElementById(tableName + "ResultsTable").deleteRow(i - 1);
		}
		//Displayer
		document.getElementById(tableName + "Container").style.display = "block";
		document.getElementById(tableName + "copyButton").innerHTML = '&#x1F4CB';
		document.getElementById(tableName + "copyButton").style.display = 'block';
		document.getElementById(tableName + "copySelectButton").style.display = "block";
	}
	function tableBuilder(queryResults, tableName, headers) {
		let table = document.getElementById(tableName);
		let headerTable = table.createTHead();
		let headerRowTable = table.insertRow(0);
		if (queryResults.length == 0) {
			let curHeaderCell = headerRowTable.insertCell(-1);
			curHeaderCell.innerHTML = "The query failed to return any results";
		}
		else {
			let tableHeaders = Object.keys(queryResults[0]).filter(word => headers.includes(word));
			let discardedHeaders = Object.keys(queryResults[0]).filter(word => !headers.includes(word));
			for (let i = 0; i < tableHeaders.length; ++i) {
				let curHeaderCell = headerRowTable.insertCell(-1);
				curHeaderCell.innerHTML = tableHeaders[i].replace(/_/g, " ");
			}
			let newInputs = [];
			for (let record in queryResults) {
				//NEED TO DELETE THIS FIELD WITHOUT DELEING GLOBAL INPUTS
				//THERE IS A BETTER WAY TO DO THIS
				let newRecord = {};
				tableHeaders.forEach(function (header) {
					let curRecord = queryResults[record];
					newRecord[header] = curRecord[header];
				});
				let recordsEqual = newInputs.map(curRecord => _.isEqual(newRecord, curRecord));
				if (!recordsEqual.includes(true)) {
					newInputs.push(newRecord);
				}
			}
			for (let record in newInputs) {
				let curRecord = newInputs[record];
				let recordValues = Object.values(newInputs[record]);
				let curRecordRow = table.insertRow(-1);
				for (let i = 0; i < tableHeaders.length; ++i) {
					let curRecordCell = curRecordRow.insertCell(-1);
					curRecordCell.innerHTML = recordValues[i];
				}
			}
		}
	}
	function constructClipboard(chosenFields, table) {
		let financeTables = ["Invoices", "Transactions"];
		let queryResults = "";
		if (financeTables.includes(table)) {
			queryResults = JSON.parse(document.getElementById("financeQueryResults").innerHTML);
		} else {
			queryResults = JSON.parse(document.getElementById("customerQueryResults").innerHTML);
		}
		let clipboardContents = "";
		let rowsInTable = document.getElementById(table+"ResultsTable").rows.length; 
		for (let curRecord = 0; curRecord < rowsInTable - 1; ++curRecord) {
			let record = queryResults[curRecord];
			for (let chosenField in chosenFields) {
				if (record[chosenFields[chosenField]] != null) {
					if (record[chosenFields[chosenField]].includes("\r") || record[chosenFields[chosenField]].includes("\n")) {
						let clipboardRecord = record[chosenFields[chosenField]].replace(/\r/g, ", ");
						clipboardRecord = clipboardRecord.replace(/\n/g, ", ");
						clipboardContents += "\t" + clipboardRecord;
					} else {
						clipboardContents += "\t" + record[chosenFields[chosenField]];
					}
				} else {
					clipboardContents += "\t";
				}
			}
			clipboardContents += "\n";
		}
		document.getElementById("clipboard").innerHTML = clipboardContents;
	}

</script>