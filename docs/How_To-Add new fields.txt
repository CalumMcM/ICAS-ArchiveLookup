1. Add new field name to PersonController.cs sql query with appropriate SQL
2. Add field to Person.cs as string with get and set
3. Add field to PersonQuery.cs as attribute with correct datatype
4. Add field to PersonQuery.cs ToDapperParameter() in same format as other fields
5. Add field to correct test case in PersonControllerTest.cs. 
	a. If this fields is from a new table then a new test case will have to be made.
6. Add field to getDatabasePrefix() switch case with correct prefix
	a. The test the field was added to in stage 5. should now run and pass
7. Add the field to the list of headers passed to tableBuilder for the table you wish
this table to be a part of.
	a. This should be done in the .cshtml file for the page you are wanting it to be on

If this field is to be a searchable field then you will also need to:

8. Add a button for this field in the .cshtml file for the page you want it on
	a. Add the id prefix of the button (e.g. mk for MAJOR_KEY) to getBtnNames()
	b. Add the corresponding field name for this button (e.g. MAJOR_KEY) to getClassNames()
		- The id prefix should be in the same position for getBtnNames() as the field name
		is in getClassNames()
9b. Add a text field which has the same id prefix as the button for this class