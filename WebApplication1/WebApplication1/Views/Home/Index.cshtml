@{
	ViewBag.Title = "Finance";
}

<div class="jumbotron">

	<img src="ICASLogo.png">
	<h1>
		Finance Lookup
		<div class="underline"></div>
	</h1>
	<p>Select the criteria for your search: </p>

	<button id="idInputButton" onclick="showInput('idInput')" class="addBtn">ID</button>
	<button id="mkInputButton" onclick="showInput('mkInput')" class="addBtn">Major Key</button>
	<button id="forenameInputButton" onclick="showInput('forenameInput')" class="addBtn">First Name</button>
	<button id="middlenameInputButton" onclick="showInput('middlenameInput')" class="addBtn">Middle Name</button>
	<button id="surnameInputButton" onclick="showInput('surnameInput')" class="addBtn">Last Name</button>
	<button id="firmidInputButton" onclick="showInput('firmidInput')" class="addBtn">Firm ID</button>
	<button id="firmnameInputButton" onclick="showInput('firmnameInput')" class="addBtn">Firm Name</button>

	<p id="idInputText" class="lead">
		ID:
		<input type="text" id="idInput" class="input-lookup" name="id">
	</p>

	<p id="mkInputText" class="lead">
		Major Key:
		<input type="text" id="mkInput" class="input-lookup" name="mk">
	</p>

	<p id="forenameInputText" class="lead">
		First Name:
		<input type="text" id="forenameInput" class="input-lookup" name="forename">
	</p>

	<p id="middlenameInputText" class="lead">
		Middle Name:
		<input type="text" id="middlenameInput" class="input-lookup" name="middlename">
	</p>

	<p id="surnameInputText" class="lead">
		Last Name:
		<input id="surnameInput" type="text" class="input-lookup" name="surname">
	</p>

	<p id="firmidInputText" class="lead">
		Firm ID:
		<input type="text" id="firmidInput" class="input-lookup" name="firmid">
	</p>

	<p id="firmnameInputText" class="lead">
		Firm Name:
		<input type="text" id="firmnameInput" class="input-lookup" name="firmname">
	</p>

	<p><button id="submitButton" onClick="processQuery()" class="btn btn-primary btn-lg">Submit</button></p>
	<div id="ResultsHeader" class="resultsHeader">
		<h1>Results
			<div id="resultsUnderline" class="underlineResults"></div>
		</h1>
	</div>

	<div id="CustomerHeader" class="resultsHeader">
		<h2>Customer<div id="billingUnderline" class="underlineResults"></div>
		</h2>
	</div>
	<div id="CustomerContainer" class="minotron">
		<table id="CustomerResultsTable" class="resultsTable">
			<tr></tr>
		</table>
	</div>

	<div id="ActivityHeader" class="resultsHeader">
		<h2>Activity
			<div id="ActivityUnderline" class="underlineResults"></div>
		</h2>
	</div>
	<div class="copySelectDropdown">
		<button id="copyButton" onclick="copy()" class="copyBtn">&#x1F4CB</button>
		<button id="copySelectButton" onclick="showCopyDropdown()" class="copyBtn">+</button>
		<div id="myDropdown" class="copySelectDropdown-content">
			<button id="idCopyButton" onclick="copySelectButton('idCopy')" class="addBtn">ID</button>
			<button id="mkCopyButton" onclick="copySelectButton('mkCopy')" class="addBtn">Major Key</button>
			<button id="forenameCopyButton" onclick="copySelectButton('forenameCopy')" class="addBtn">First Name</button>
			<button id="middlenameCopyButton" onclick="copySelectButton('middlenameCopy')" class="addBtn">Middle Name</button>
			<button id="surnameCopyButton" onclick="copySelectButton('surnameCopy')" class="addBtn">Last Name</button>
			<button id="descCopyButton" onclick="copySelectButton('descCopy')" class="addBtn">Description</button>
			<button id="transCopyButton" onclick="copySelectButton('transCopy')" class="addBtn">Transaction Date</button>
			<button id="effecCopyButton" onclick="copySelectButton('effecCopy')" class="addBtn">Effective Date</button>
			<button id="prodCopyButton" onclick="copySelectButton('prodCopy')" class="addBtn">Product Code</button>
			<button id="actCopyButton" onclick="copySelectButton('actCopy')" class="addBtn">Activity Type</button>
			<button id="functionaltitleCopyButton" onclick="copySelectButton('functionaltitleCopy')" class="addBtn">Functional Title</button>
			<button id="statusCopyButton" onclick="copySelectButton('statusCopy')" class="addBtn">Status</button>
			<button id="intakeyearCopyButton" onclick="copySelectButton('intakeyearCopy')" class="addBtn">Intake Year</button>
			<button id="tpceCopyButton" onclick="copySelectButton('tpceCopy')" class="addBtn">TPCE STUDENT</button>
			<button id="treCopyButton" onclick="copySelectButton('treCopy')" class="addBtn">TRE Student</button>
			<button id="csdCopyButton" onclick="copySelectButton('csdCopy')" class="addBtn">Contract Start Date</button>
			<button id="cedCopyButton" onclick="copySelectButton('cedCopy')" class="addBtn">Contract End Date</button>
			<button id="firmidCopyButton" onclick="copySelectButton('firmidCopy')" class="addBtn">Firm ID</button>
			<button id="firmnameCopyButton" onclick="copySelectButton('firmnameCopy')" class="addBtn">Firm Name</button>
			<button id="fcdCopyButton" onclick="copySelectButton('fcdCopy')" class="addBtn">Final Certificate Date</button>
			<button id="ecdCopyButton" onclick="copySelectButton('ecdCopy')" class="addBtn">Exam Certificate Date</button>
			<button id="bpCopyButton" onclick="copySelectButton('bpCopy')" class="addBtn">Be Pass</button>
			<button id="lbvCopyButton" onclick="copySelectButton('lbvCopy')" class="addBtn">Logbook Verified</button>
			<button id="lbvdCopyButton" onclick="copySelectButton('lbvdCopy')" class="addBtn">Logbook Verified Date</button>
			<button id="itpsCopyButton" onclick="copySelectButton('itpsCopy')" class="addBtn">ITP Student</button>
			<button id="itpCopyButton" onclick="copySelectButton('itpCopy')" class="addBtn">ITP Passed</button>
			<button id="eaCopyButton" onclick="copySelectButton('eaCopy')" class="addBtn">Event Attendees</button>
			<button id="tpmCopyButton" onclick="copySelectButton('tpmCopy')" class="addBtn">TP Monthly</button>
		</div>
	</div>
	<div id="ResultsHeaders"></div>
	<div id="ResultsContainer" class="minotron">
		<table id="ResultsTable" class="resultsTable">
			<tr></tr>
		</table>
	</div>

	<div id="BillingHeader" class="resultsHeader">
		<h2>
			Billing
			<div id="billingUnderline" class="underlineResults"></div>
		</h2>
	</div>

	<div id="BillingHeader" class="resultsHeader">
		<h2>
			AR/Cash
			<div id="billingUnderline" class="underlineResults"></div>
		</h2>
	</div>

	<p id="clipboard" class="clipboard"></p>
	<p id="queryResults" class="queryResults"></p>
</div>
<script src="~/Scripts/moment.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script>
	const getBtnNames = () =>["id", "mk", "forename", "middlename", "surname", "firmid", "firmname"];
	const getClassNames = () =>["ID", "MAJOR_KEY", "FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "FIRM_ID", "FIRM_NAME"];

	function showInput(input) {
		let inputText = document.getElementById(input);
		let inputTextTitle = document.getElementById(input + "Text");
		let button = document.getElementById(input + "Button");
		if (inputText.style.display == "none" || button.style.backgroundColor == "") {
			inputText.value = "";
			inputText.style.display = "block";
			inputTextTitle.style.display = "block";
			button.style.backgroundColor = "#20A64B"
		} else {
			inputText.style.display = "none";
			inputTextTitle.style.display = "none";
			button.style.backgroundColor = "#C00A27";
		}
		showSubmit();
	}
	function copy() {
		let btnNames = getBtnNames();
		let classNames = getClassNames();
		let chosenFields = [];
		for (let button in classNames) {
			if (document.getElementById(btnNames[button]+"CopyButton").style.backgroundColor == "rgb(32, 166, 75)") {
				chosenFields.push(classNames[button]);
			}
		}
		constructClipboard(chosenFields);
		let clipboardContents = document.getElementById("clipboard").innerHTML;
		let itemsToCopy = document.createElement("textarea");
		document.body.appendChild(itemsToCopy);
		itemsToCopy.value = clipboardContents;
		itemsToCopy.select();
		document.execCommand("copy");
		console.log("copied!");
		document.body.removeChild(itemsToCopy);
		document.getElementById("copyButton").innerHTML = '&#10004';
	}
	function copySelectButton(buttonID) {
		currentColour = document.getElementById(buttonID + "Button").style.backgroundColor;
		document.getElementById("copyButton").innerHTML = '&#x1F4CB';
		if (currentColour == "rgb(192, 10, 39)" || currentColour == "") {
			document.getElementById(buttonID + "Button").style.backgroundColor = "#20A64B";
		}
		else {
			document.getElementById(buttonID + "Button").style.backgroundColor = "#C00A27";
		}
	}
	function showCopyDropdown() {
		document.getElementById("myDropdown").classList.toggle("show");
	}
	function showSubmit() {
		let btnNames = getBtnNames();
		let active = 0;
		for (let button in btnNames) {
			if (document.getElementById(btnNames[button] + "InputButton").style.backgroundColor === "rgb(32, 166, 75)") {
				++active;
				document.getElementById("submitButton").style.display = "block";
			}
		}
		if (active == 0) {
			document.getElementById("submitButton").style.display = "none";
		}
	}
	function processQuery() {
		let btnNames = getBtnNames();
		let classNames = getClassNames();
		let inputs = {}
		let dateTypesObjects = $('input[type=date]').map(function () { return this.id; }).get();
		for (let button in btnNames) {
			if (document.getElementById(btnNames[button] + "InputButton").style.backgroundColor == "rgb(32, 166, 75)") {
				if (dateTypesObjects.includes(btnNames[button] + "input")) {
					inputs[classNames[button]] = moment(document.getElementById(btnNames[button] + "Input").value).format('YYYY-MM-DDT00:00:00');
				}
				else {
					if (btnNames[button] + "Input")
					inputs[classNames[button]] = document.getElementById(btnNames[button] + "Input").value;
				}
			}
		}
		let xhttp = new XMLHttpRequest();
		xhttp.open("POST", 'api/person', true);
		let MOCKqueryResults;
		xhttp.onreadystatechange = function () {
			if (this.readyState == 4 && this.status == 200) {
				var queryResults = this.response
				queryResults = $.parseJSON(queryResults);
				console.log(queryResults);
				displayResults(queryResults);
				document.getElementById("queryResults").innerHTML = JSON.stringify(queryResults);
			}
		};
		xhttp.setRequestHeader('Content-Type', 'application/json');
		xhttp.send(JSON.stringify(inputs));

	}
	function displayResults(inputs) {
		//Delete previous table if it exists:
		for (var i = document.getElementById("ResultsTable").rows.length; i > 0; i--) {
			document.getElementById("ResultsTable").deleteRow(i - 1);
		}
		//Display and Construct new table:
		document.getElementById("ResultsContainer").style.display = "block";
		document.getElementById("ResultsHeader").style.display = "block";
		document.getElementById("CustomerContainer").style.display = "block";
		document.getElementById("CustomerHeader").style.display = "block";
		document.getElementById("CustomerHeader").style.display = "block";
		document.getElementById("ActivityHeader").style.display = "block";
		document.getElementById("BillingHeader").style.display = "block";
		document.getElementById("resultsUnderline").style.display = "block";
		document.getElementById("copyButton").innerHTML = '&#x1F4CB';
		document.getElementById("copyButton").style.display = "block";
		document.getElementById("copySelectButton").style.display = "block";
		let resultsTableHeaders = ["ID", "MAJOR_KEY", "FIRST_NAME", "MIDDLE_NAME","LAST_NAME", "DESCRIPTION", "TRANSACTION_DATE", "EFFECTIVE_DATE", "PRODUCT_CODE", "ACTIVITY_TYPE", "FUNCTIONAL_TITLE", "STATUS", "INTAKE_YEAR", "TPCE_STUDENT", "TRE_STUDENT", "CONTRACT_START_DATE", "CONTRACT_END_DATE", "FIRM_ID", "FIRM_NAME", "FINAL_CERTIFICATE_DATE", "EXAM_CERTIFICATE_DATE", "BE_PASS", "LOGBOOK_VERIFIED", "LOGBOOK_VERIFIED_DATE", "ITP_STUDENT", "ITP_Passed", "EVENT_ATTENDEES", "TP_Monthly"];
		let customerResultsTable = ["FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "COMMENTS"];
		tableBuilder(inputs, "CustomerResultsTable", customerResultsTable)
		tableBuilder(inputs, "ResultsTable", ["ID", "MAJOR_KEY", "FIRST_NAME", "MIDDLE_NAME", "LAST_NAME", "DESCRIPTION", "TRANSACTION_DATE", "EFFECTIVE_DATE", "PRODUCT_CODE", "ACTIVITY_TYPE", "FUNCTIONAL_TITLE", "STATUS", "INTAKE_YEAR", "TPCE_STUDENT", "TRE_STUDENT", "CONTRACT_START_DATE", "CONTRACT_END_DATE", "FIRM_ID", "FIRM_NAME", "FINAL_CERTIFICATE_DATE", "EXAM_CERTIFICATE_DATE", "BE_PASS", "LOGBOOK_VERIFIED", "LOGBOOK_VERIFIED_DATE", "ITP_STUDENT", "ITP_Passed", "EVENT_ATTENDEES", "TP_Monthly"]);
	}
	function tableBuilder(queryResults, tableName, headers) {
		console.log(headers);
		let table = document.getElementById(tableName);
		let headerTable = table.createTHead();
		let headerRowTable = table.insertRow(0);
		if (queryResults.length == 0) {
			let curHeaderCell = headerRowTable.insertCell(-1);
			curHeaderCell.innerHTML = "The query failed to return any results";
		}
		else {
			
			let tableHeaders = Object.keys(queryResults[0]).filter(word => headers.includes(word));
			let discardedHeaders = Object.keys(queryResults[0]).filter(word => !headers.includes(word));
			console.log(tableHeaders);
			console.log(discardedHeaders);
			for (let i = 0; i < tableHeaders.length; ++i) {
				let curHeaderCell = headerRowTable.insertCell(-1);
				curHeaderCell.innerHTML = tableHeaders[i];
			}
			let newInputs = [];
			for (let record in queryResults) {
				//NEED TO DELETE THIS FIELD WITHOUT DELEING GLOBAL INPUTS
				//THERE IS A BETTER WAY TO DO THIS 
				let newRecord = {};
				tableHeaders.forEach(function (header) {
					let curRecord = queryResults[record];
					console.log(header);
					console.log(curRecord[header]);
					newRecord[header] = curRecord[header];
				});
				newInputs.push(newRecord);
				console.log(newInputs);
			}
			for (let record in newInputs) {
				let curRecord = newInputs[record];
				let recordValues = Object.values(newInputs[record]);
				let curRecordRow = table.insertRow(-1);
				for (let i = 0; i < tableHeaders.length; ++i) {
					let curRecordCell = curRecordRow.insertCell(-1);
					curRecordCell.innerHTML = recordValues[i];
				}
			}
		}
	}
	function constructClipboard(chosenFields) {
		let queryResults = JSON.parse(document.getElementById("queryResults").innerHTML);
		let clipboardContents = "";
		if (chosenFields.length == 0) {
			for (let record in queryResults) {
				let curRecord = queryResults[record];
				let recordValues = Object.values(queryResults[record]);
				recordValues.forEach(function (element) {
					clipboardContents += "\t" + element
				});
				clipboardContents += "\n";
			}
		}
		else
		{
			for (let curRecord in queryResults) {
				let record = queryResults[curRecord];
				for (let chosenField in chosenFields) {
					clipboardContents += "\t" + record[chosenFields[chosenField]];
				}
				clipboardContents += "\n";
			}
		}
		document.getElementById("clipboard").innerHTML = clipboardContents;
	}

</script>